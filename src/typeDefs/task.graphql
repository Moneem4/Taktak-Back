enum Visibility {
	PRIVATE
	PUBLIC
}

enum State {
	DONE
	PENDING
}
input CreateTaskInput {
nom: String!
  description: String!
  state: State!
  visibility:Visibility!
  conditions: String!
  creatorId: ID!
  deletedAt:String
  updatedAt: String
}

input UpdateTaskInput {
	visibility: Visibility!
	nom: String!
	state: State!
  description: String!
  conditions: String!
  updatedBy: ID!
}

type Task {
  _id: ID
  nom: String
  description: String
  state: State
  visibility:Visibility
  conditions: String
  createdAt: Float
  creatorId: ID!
  userId:ID!
  updatedBy: User
 deletedAt:String
  updatedAt: String
}
type Query {
	getTasks: [Task]
	getTaskById(_id: String!): Task
}

type Mutation {
	createTask(input: CreateTaskInput!): Task
	updateTask(_id: ID!, input: UpdateTaskInput): Task
	deleteTasks(_id: ID!): Boolean
}

