enum Status{
	ACCEPTED
	REFUZED
	PENDING
}

input CreateServiceContributorInput{
	serviceId: ID!
	userId: ID!
	status: Status!
	percentage: Float!
}

input UpdateServiceContributorInput{
	status: Status!
	percentage: Float!
}

type ServiceContributor{
	_id: ID!
	serviceId: ID!
	userId: ID!
	status: Status!
	percentage: Float!
	createdAt: Float!
	updatedAt: Float!
}

type Query{
	contributors(serviceId: ID!): [ServiceContributor]
}

type Mutation{
	createServiceContributor(input: CreateServiceContributorInput!): ServiceContributor
	updateServiceContributor(_id: ID!,input: UpdateServiceContributorInput): ServiceContributor
	deleteServiceContributor(_id: ID!): Boolean
}