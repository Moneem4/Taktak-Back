enum State{
	PUBLISHED
    NOT_PUBLISHED
}


enum PassType{
	TICKET
	RESERVATION
}
input CreateEventInput{
	creatorId: ID!
    plan: String!
    maxPurchase: Float!
    capacity:Float!
    description: String!
    passType:PassType!
    validation:Boolean!
    filter: String!
    location: String!
    deletedAt:String
    updatedAt: String

    
}

input UpdateEventInput{
    plan: String!
    capacity: Float!
    description: String!
    passType:PassType!
    filter: String!
    validation:Boolean!
    location: String!
     maxPurchase: Float!
}

type Event{
	_id: ID!
	creatorId: ID!
    plan: String!
    capacity: Float!
    description: String!
    location: String!
    access: Access!
    filter: String!
    maxPurchase: Float!
	createdAt: String!
	updatedAt: String
    logs: [EventLog]
	teams: [EventTeam]
    packs: [EventPack]
    accesses: [EventAccess]
    invitations: [EventInvitation]
    deletedAt:String

}

type Query{
	getEvents:[Event]
	getEventById(_id: ID!): Event
    getEventbyCreator(creatorId: ID!): [Event]
}

type Mutation{
	createEvent(input: CreateEventInput!): Event
    updateEvent(_id: ID!,input: UpdateEventInput): Event
    deleteEvent(_id: ID!): Boolean
    deleteCreatorEvents(creatorId: ID!): Boolean
}