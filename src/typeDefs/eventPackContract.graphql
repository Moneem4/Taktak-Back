input CreateEventPackContractInput {
	contract: ID!
	title: String!
	price: Float!
	startDate: Float!
	endDate: Float!
	deletedAt:String
	updatedAt: String
}

input UpdateEventPackContractInput {
	title: String!
	price: Float!
	startDate: String!
	endDate: String!
}

type EventPackContract {
	_id: ID!
	contract: Contract!
	title: String!
	price: Float!
	startDate: Float!
	endDate: String!
	createdAt: String!
	updatedAt: String!
}

type Query {
	EventPackContracts(eventId: ID!): [EventPackContract]
	getEventPackContracts: [EventPackContract]
	getEventPackContractById(_id: ID!): EventPackContract
	getEventPackContractsByEvent(eventId: ID!): [EventPackContract]
}

type Mutation {
	createEventPackContract(input: CreateEventPackContractInput!): EventPackContract
	updateEventPackContract(_id: ID!, input: UpdateEventPackContractInput): EventPackContract
}