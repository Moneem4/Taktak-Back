input CreateEatWithStrangerInput {
	name: String!
    description: String!
	price: Float!
    quantity:Float!
     strangerId:ID!
     address:String!
    strangerName: String!
    restaurantId: ID!
    service:ID!
    createdAt: String
    deletedAt:String
	updatedAt: String

}
input UpdateEatWithStrangerInput {
	name: String
	price: Float!
    quantity:Int!
    description: String!
}
type EatWithStranger {
	_id: ID!	
    strangerId:ID!
    address:String!
	name: String!
    price:Float!
	description: String!
    strangerName: String!
    restaurantId: ID!
	createdAt: String!
    deletedAt:String!
	updatedAt: String!
    service:Service!
   
}

type Query {
	getEatWithStrangers: [EatWithStranger]
	getEatWithStrangerById(_id: ID!): EatWithStranger
}

type Mutation {
	createEatwithStranger(input: CreateEatWithStrangerInput!): EatWithStranger
    updateEatwithStranger(_id: String, input: UpdateEatWithStrangerInput): EatWithStranger
	deleteEatwithStranger(_id: ID!):Boolean!
	
   
}